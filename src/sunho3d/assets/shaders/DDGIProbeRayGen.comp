#version 450


#extension GL_GOOGLE_include_directive : require

#include "common.glsl"
#include "probe.glsl"

layout (local_size_x = RAYS_PER_PROBE) in;
layout(std140, binding = 0) uniform SceneBuffer {
    uvec2 frameSize;
    uint instanceNum;
    Instance instances[MAX_INSTANCES];
    SceneInfo sceneInfo;
} sceneBuffer;


layout( push_constant ) uniform PushConstants {
    uint globalRngState;
} constants;

layout(std140, set=1, binding = 0) buffer RayBuffer {
    Ray rays[];
} rayBuffer;



void main() {
    int probeID = int(gl_WorkGroupID.x);
    uint rayID = gl_LocalInvocationID.x;
    vec3 pos = probeIDToPos(probeID, sceneBuffer.sceneInfo);
    rngState = pcgHash(constants.globalRngState +probeID * RAYS_PER_PROBE + rayID);
    rayBuffer.rays[probeID * RAYS_PER_PROBE + rayID] = Ray(pos, 0.001, randDirSphere(), 10000.0);
}
